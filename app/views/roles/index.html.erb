<%- model_class = Role -%>
<div class="page-header">
  <h1>
    <%=t '.title', :default => model_class.model_name.human.pluralize.titleize %>
    <span><%= link_to "Users", users_path %></span>
  </h1>
</div>
<table class="table table-striped">
  <thead>
    <tr>
      <th></th>
      <th><%= model_class.human_attribute_name(:id) %></th>
      <th><%= model_class.human_attribute_name(:name) %></th>
      <th><%= model_class.human_attribute_name(:created_at) %></th>
      <th><%=t '.actions', :default => t("helpers.actions") %></th>
    </tr>
  </thead>
  <tbody>
    <% @roles.each do |role| %>
      <tr>
        <td>
          <input type="checkbox" class="hide checkboxes" onclick="hideRole(this, event)" id="<%= role.id %>"
                 <%
                    if role.hide?
                 %>
                  checked="true"
                 <%
                    end
                 %>
          >
        </td>
        <td><%= link_to role.id, role_path(role) %></td>
        <td><%= role.name %></td>
        <td><%=l role.created_at %></td>
        <td>
          <%= link_to t('.edit', :default => t("helpers.links.edit")),
                      edit_role_path(role), :class => 'btn btn-default btn-xs' %>
          <%= link_to t('.destroy', :default => t("helpers.links.destroy")),
                      role_path(role),
                      :method => :delete,
                      :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) },
                      :class => 'btn btn-xs btn-danger' %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= link_to t('.new', :default => t("helpers.links.new")),
            new_role_path,
            :class => 'btn btn-primary' %>
<button class="btn btn-primary" onclick="hideRoles()">Hide Roles</button>
<button class="btn btn-primary" onclick="showUsers()">Show Users</button>

<script type="text/javascript">
    function hideRoles() {
        $(".checkboxes").removeClass("hide");
        $(".checkboxes").addClass("show");
    };

    function hideRole(ele, e) {
        var id = $(ele).attr("id");
        var selected = $(ele).is(":checked");

        var params = {
            id : id
        }

        if(selected) {
            ajaxCall("roles/hide_role", params, {
                type: "POST",
                success: function() {
                    console.log("success");
                },
                failure: function() {
                    console.log("failure");
                }
            })
        } else {
            ajaxCall("roles/show_role", params, {
                type: "POST",
                success: function() {
                    console.log("success");
                },
                failure: function() {
                    console.log("failure");
                }
            })
        }
    };

    function showUsers() {
        ajaxCall("/users/show_users", { 'start' : 0 }, {
            type: "POST",
            success: function(response) {
                renderData(response);
            },
            failure: function() {
                console.log("failure");
            }
        });
    };

    function renderData(response) {
        //document.location = "users/show_users"
        //alert(JSON.stringify(response));
    }


    function ajaxCall(url, params, options) {
        var fd= "data=" + JSON.stringify(params);

        $.ajax({
            url : url,
            data : fd,
            contentType : "application/x-www-form-urlencoded; charset=UTF-8",
            type : options.type,
            async : false,
            success : options.success,
            failure : options.failure
        });
    }
</script>
